#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'optiflag'
require "config"
require 'aip'

module CommandLineOptions extend OptiFlagSet
  
  flag "aip" do
    description "the aip to ingest"
  end
  
  flag "config" do
    description "the configuration file to use"
  end
    
  and_process!
end

Config::load CommandLineOptions.flags.config
DataMapper.setup(:default, Config::Service["database"])

aip = begin
        Aip.new CommandLineOptions.flags.aip
      rescue => e
        puts "cannot process #{CommandLineOptions.flags.aip}: #{e.message}"
        exit 1
      end

if aip.rejected?
  puts "#{aip} is rejected"
  exit 2
elsif aip.snafu?
  puts "#{aip} is snafu"
  exit 3
else  
  aip.ingest!
end

# handle the aftermath
if aip.rejected?
  puts "#{aip} is rejected"
  exit 2
elsif aip.snafu?
  puts "#{aip} is snafu"
  exit 3
else
  puts "#{aip} is ingested"
end
