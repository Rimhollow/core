#!/usr/bin/ruby

require 'aip'

raise "package url is required" if ARGV.empty?
url = ARGV[0]

aip = begin
        Aip.new url
      rescue => e
        puts "cannot process #{url}: #{e.message}"
        exit 1
      end

begin
  aip.ingest!
  puts "#{aip} ingested"
rescue Reject => e
  
  open(File.join(aip.url.path, 'REJECT'), "w") do |io|
    io.puts Time.now
    
    e.reasons.each do |r|
      puts "%s %s: %s" % [ r[:time].strftime('%c'), r[:type], r[:message] ]
    end
    
  end
  
  puts "Package #{aip} rejected"
  puts
  puts 'Reason(s) for rejection:'
  e.reasons.each do |r|
    puts "%s %s: %s" % [ r[:time].strftime('%c'), r[:type], r[:message] ]
  end

  exit 2
rescue => e
  
  open(File.join(aip.url.path, 'SNAFU'), "w") do |io|
    io.puts Time.now
    io.puts e.message
  end
  
  puts "Package #{aip} is snafu: #{e.message}"
  
  puts e.backtrace
  exit 3
end
