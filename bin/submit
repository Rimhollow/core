#!/usr/bin/env ruby

require 'net/http'
require 'digest/md5'
require 'uri'

require 'daitss/config'
require 'template/premis'
require 'wip/from_sip'
require 'wip/task'
require 'workspace'

begin

  # configuration
  raise "CONFIG must be set" unless ENV['CONFIG']
  Daitss::CONFIG.load ENV['CONFIG']

  # tar up the sip
  sip_path = ARGV.shift or raise "sip required"
  url = URI.parse Daitss::CONFIG['submission-url']
  req = Net::HTTP::Post.new url.path
  tar = %x{tar -c -C #{File.dirname sip_path} -f - #{File.basename sip_path} }
  raise "tar did not work" if $?.exitstatus != 0

  # submit it
  req.body = tar
  req.content_type = 'application/tar'
  req.basic_auth 'operator', 'operator'
  req['X-Package-Name'] = File.basename sip_path
  req['Content-MD5'] = Digest::MD5.hexdigest(req.body)
  req['X-Archive-Type'] = 'tar'

  res = Net::HTTP.start(url.host, url.port) do |http|
    http.read_timeout = Daitss::CONFIG['http-timeout']
    http.request req
  end

  res.error! unless Net::HTTPSuccess === res
  doc = Nokogiri::XML res.body
  id = (doc % 'IEID').content
  puts "#{id} submitted"
rescue => e
  puts e.message
  exit 1
end
