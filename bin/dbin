#!/usr/bin/env ruby

#require 'rubygems'
#require 'bundler/setup'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'ruby-debug'

require "daitss/config"
require 'daitss/proc/wip/ingest'
require 'daitss/proc/wip/disseminate'
require 'daitss/proc/wip/task'
require 'daitss/db/preservation_event'
require 'daitss/proc/workspace'
require 'daitss/archive'

include Daitss

CONFIG.load_from_env
DataMapper.setup :default, CONFIG['database-url']
WORKSPACE = Archive.new.workspace

task = ARGV.shift or raise "no task given"
id = ARGV.shift or raise "no wip given"
wip = WORKSPACE[id] or raise "wip not in workspace"

begin
  OUT_LOG = File.join wip.path, 'out.log'
  ERR_LOG = File.join wip.path, 'err.log'

  $stdout.reopen OUT_LOG, 'w'
  $stderr.reopen ERR_LOG, 'w'

  wip.package.log "#{task} started"

  case task.to_sym
  when Wip::TASK_INGEST then wip.ingest!
  when Wip::TASK_DISSEMINATE then wip.disseminate
  else raise "invalid task #{task.inspect}"
  end

  wip.package.log "#{task} finished"
  FileUtils.rm_r wip.path unless wip.snafu?
rescue => e
  wip.snafu = e
  wip.package.log "#{task} snafu"
  exit 1
end
