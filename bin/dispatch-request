#!/usr/bin/env ruby

require 'daitss/model/request'
require 'daitss/model/event'
require 'daitss/archive'
require 'digest/sha1'

POLL_INTERVAL = 2

#for any request ieid for which there is no wip in the workspace, dispatch a "sub-wip" for that request

def create_op_agent
  existing = Program.first(:id => File.basename(__FILE__))
  return existing if existing

  p = Program.new

  p.attributes = {
    :description => "request dispatch program",
    :id => File.basename(__FILE__),
    :auth_key => Digest::SHA1.hexdigest(__FILE__)
  }

  p.account = Account.get(Archive::SYSTEM_ACCOUNT_ID)

  p.save

  return p
end

def insert_op_event agent, package, request_id
  e = Event.new
  e.attributes = { :timestamp => Time.now,
                   :name => "Request Released To Workspace",
                   :notes => "request_id: #{request_id}" }

  e.agent = agent
  e.package = package

  e.save
end

include Daitss

archive
agent = create_op_agent

while true
  enqueued_and_authorized = Request.all(:is_authorized => true, :status => :enqueued, :order => [ :timestamp.asc ])

  enqueued_and_authorized.each do |request|
    if archive.workspace[request.package.id]
      next #skip if package already has a wip in workspace
    else
      request.dispatch
      insert_op_event agent, request.package, request.id
    end
  end

  sleep POLL_INTERVAL
end

