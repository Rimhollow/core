#!/usr/bin/env ruby

require 'daitss/archive'
require 'daitss/model'
require 'daitss/archive/email'
require 'fileutils'

include Daitss

archive

# find all ingested packages. If it doesn't have an ingest report ops event, mail the report to the account address, and add an event for the report being mailed
STDERR.puts "Starting report daemon..."

while true
  ReportDelivery.all.each do |r|
    p = r.package
    if r.mechanism == :email
      if r.type == :ingest
        STDERR.puts "emailing ingest report for #{p.id}"

        Archive.instance.email_report p
        p.log "ingest report mailed"
      else
        STDERR.puts "emailing reject report for #{p.id}"

        Archive.instance.email_reject_report p
        p.log "reject report mailed"
      end
    else
      if r.type == :ingest
        STDERR.puts "writing out ingest report for #{p.id}"

        rep = Archive.instance.ingest_report p.id
        p.log "ingest report written out for ftp"
      else
        STDERR.puts "writing out reject report for #{p.id}"

        rep = Archive.instance.reject_report p.id
        p.log "reject report written out for ftp"
      end

      report_file = File.join archive.reports_path, p.project.account.id, Time.now.strftime("%Y%m%d"), (p.id + ".xml")
      FileUtils.mkdir_p File.dirname report_file

      File.open(report_file, "w+") do |f|
        f.puts rep
      end
    end

    r.destroy
  end

  sleep 60
end


