#!/usr/bin/env ruby

require "fileutils"
require "workspace"

class CommandError < RuntimeError; end

TS_CONFIG_FILE = File.join File.dirname(__FILE__), '../spec/config/teststack.yml'

begin

  # check for DAITSS_WORKSPACE
  raise "DAITSS_WORKSPACE must be set" unless File.directory? ENV['DAITSS_WORKSPACE']
  @workspace = Workspace.new ENV['DAITSS_WORKSPACE']
  
  # the base command
  command = ARGV.shift or raise CommandError, "must specify command"

  case command
  when "start"
    target = ARGV.shift or raise CommandError, "must specify a package or all"
    aip = (target == "all" ? :all : target)
    @workspace.start aip, TS_CONFIG_FILE
    
  when "stop"
    target = ARGV.shift or raise CommandError, "must specify a package or all"
    aip = (target == "all" ? :all : target)
    @workspace.stop aip
    
  when "list"

    list = case ARGV.shift
           when "pending" then @workspace.pending
           when "ingesting" then @workspace.ingesting
           when "stopped" then @workspace.tagged_with "STOP"
           when "rejected" then @workspace.tagged_with "REJECT"
           when "snafu" then @workspace.tagged_with "SNAFU"
           when "all" then  @workspace.all_with_status
           else raise CommandError, "must specify [pending|ingesting|stopped|rejected|snafu|all]"
           end
    
    puts list

  when "stash"
    package = ARGV.shift or raise CommandError, "must specify a package"
    destination = ARGV.shift or raise CommandError, "must specify a destination"
    @workspace.stash package, destination

  when "unsnafu"
    target = ARGV.shift or raise CommandError, "must specify a package or all"
    @workspace.unsnafu target

  else
    raise CommandError, "#{command} is not [start|stop|list|stash|unsnafu]"
  end

rescue CommandError => e
  puts e.message
  exit 1

rescue => e
  puts e.message
  exit 2

end

